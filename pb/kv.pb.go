// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.1
// source: kv.proto

package pbraft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Internal representations for operations.
type Op int32

const (
	Op_GET   Op = 0
	Op_SET   Op = 1
	Op_CLEAR Op = 2
	Op_CAS   Op = 3
	// used for nodes join/leave cluster
	Op_PeerJoin  Op = 4
	Op_PeerLeave Op = 5
	// used for shardmaster
	// here we re-use the GET command in shardmaster
	Op_RECONFIG    Op = 6
	Op_GETRECONFIG Op = 7
	// used for shardkv
	// sender
	Op_DISABLEKEY Op = 8
	Op_SENDKEY    Op = 9
	// receiver
	Op_ENABLEKEY Op = 10
	// nether
	Op_UPDATECONFIG Op = 11
)

// Enum value maps for Op.
var (
	Op_name = map[int32]string{
		0:  "GET",
		1:  "SET",
		2:  "CLEAR",
		3:  "CAS",
		4:  "PeerJoin",
		5:  "PeerLeave",
		6:  "RECONFIG",
		7:  "GETRECONFIG",
		8:  "DISABLEKEY",
		9:  "SENDKEY",
		10: "ENABLEKEY",
		11: "UPDATECONFIG",
	}
	Op_value = map[string]int32{
		"GET":          0,
		"SET":          1,
		"CLEAR":        2,
		"CAS":          3,
		"PeerJoin":     4,
		"PeerLeave":    5,
		"RECONFIG":     6,
		"GETRECONFIG":  7,
		"DISABLEKEY":   8,
		"SENDKEY":      9,
		"ENABLEKEY":    10,
		"UPDATECONFIG": 11,
	}
)

func (x Op) Enum() *Op {
	p := new(Op)
	*p = x
	return p
}

func (x Op) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Op) Descriptor() protoreflect.EnumDescriptor {
	return file_kv_proto_enumTypes[0].Descriptor()
}

func (Op) Type() protoreflect.EnumType {
	return &file_kv_proto_enumTypes[0]
}

func (x Op) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Op.Descriptor instead.
func (Op) EnumDescriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

// Represents a single key, used for gets.
type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Represents a single value, can be used for put etc.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{1}
}

func (x *Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Represent a key-value pair that is used to return results.
type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{2}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Represent a void message indicating success
type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{3}
}

// Represents an error.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{4}
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// Represents an argument for CAS
type CASArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv    *KeyValue `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
	Value *Value    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CASArg) Reset() {
	*x = CASArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASArg) ProtoMessage() {}

func (x *CASArg) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASArg.ProtoReflect.Descriptor instead.
func (*CASArg) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{5}
}

func (x *CASArg) GetKv() *KeyValue {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *CASArg) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// Represents an empty message
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{6}
}

// Represents a case where we need the client to connect
// to another server.
type Redirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *Redirect) Reset() {
	*x = Redirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redirect) ProtoMessage() {}

func (x *Redirect) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redirect.ProtoReflect.Descriptor instead.
func (*Redirect) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{7}
}

func (x *Redirect) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type NotResponsible struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotResponsible) Reset() {
	*x = NotResponsible{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotResponsible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotResponsible) ProtoMessage() {}

func (x *NotResponsible) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotResponsible.ProtoReflect.Descriptor instead.
func (*NotResponsible) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{8}
}

type GroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid int64 `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *GroupId) Reset() {
	*x = GroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupId) ProtoMessage() {}

func (x *GroupId) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupId.ProtoReflect.Descriptor instead.
func (*GroupId) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{9}
}

func (x *GroupId) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type ConfigId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId int64 `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
}

func (x *ConfigId) Reset() {
	*x = ConfigId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigId) ProtoMessage() {}

func (x *ConfigId) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigId.ProtoReflect.Descriptor instead.
func (*ConfigId) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigId) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type Reconfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId *ConfigId `protobuf:"bytes,1,opt,name=configId,proto3" json:"configId,omitempty"`
	Src      *GroupId  `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst      *GroupId  `protobuf:"bytes,3,opt,name=dst,proto3" json:"dst,omitempty"`
	Key      *Key      `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Reconfig) Reset() {
	*x = Reconfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reconfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reconfig) ProtoMessage() {}

func (x *Reconfig) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reconfig.ProtoReflect.Descriptor instead.
func (*Reconfig) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{11}
}

func (x *Reconfig) GetConfigId() *ConfigId {
	if x != nil {
		return x.ConfigId
	}
	return nil
}

func (x *Reconfig) GetSrc() *GroupId {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Reconfig) GetDst() *GroupId {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *Reconfig) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

// Represents an operation result.
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*Result_Redirect
	//	*Result_Kv
	//	*Result_S
	//	*Result_Gid
	//	*Result_Reconfig
	//	*Result_NotResponsible
	Result isResult_Result `protobuf_oneof:"result"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{12}
}

func (m *Result) GetResult() isResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *Result) GetRedirect() *Redirect {
	if x, ok := x.GetResult().(*Result_Redirect); ok {
		return x.Redirect
	}
	return nil
}

func (x *Result) GetKv() *KeyValue {
	if x, ok := x.GetResult().(*Result_Kv); ok {
		return x.Kv
	}
	return nil
}

func (x *Result) GetS() *Success {
	if x, ok := x.GetResult().(*Result_S); ok {
		return x.S
	}
	return nil
}

func (x *Result) GetGid() *GroupId {
	if x, ok := x.GetResult().(*Result_Gid); ok {
		return x.Gid
	}
	return nil
}

func (x *Result) GetReconfig() *Reconfig {
	if x, ok := x.GetResult().(*Result_Reconfig); ok {
		return x.Reconfig
	}
	return nil
}

func (x *Result) GetNotResponsible() *NotResponsible {
	if x, ok := x.GetResult().(*Result_NotResponsible); ok {
		return x.NotResponsible
	}
	return nil
}

type isResult_Result interface {
	isResult_Result()
}

type Result_Redirect struct {
	Redirect *Redirect `protobuf:"bytes,1,opt,name=redirect,proto3,oneof"`
}

type Result_Kv struct {
	Kv *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3,oneof"`
}

type Result_S struct {
	S *Success `protobuf:"bytes,3,opt,name=s,proto3,oneof"`
}

type Result_Gid struct {
	Gid *GroupId `protobuf:"bytes,4,opt,name=gid,proto3,oneof"`
}

type Result_Reconfig struct {
	Reconfig *Reconfig `protobuf:"bytes,5,opt,name=reconfig,proto3,oneof"`
}

type Result_NotResponsible struct {
	NotResponsible *NotResponsible `protobuf:"bytes,6,opt,name=notResponsible,proto3,oneof"`
}

func (*Result_Redirect) isResult_Result() {}

func (*Result_Kv) isResult_Result() {}

func (*Result_S) isResult_Result() {}

func (*Result_Gid) isResult_Result() {}

func (*Result_Reconfig) isResult_Result() {}

func (*Result_NotResponsible) isResult_Result() {}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer string `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{13}
}

func (x *Peer) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

type ReconfigArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *Key     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DestGid *GroupId `protobuf:"bytes,2,opt,name=destGid,proto3" json:"destGid,omitempty"`
}

func (x *ReconfigArgs) Reset() {
	*x = ReconfigArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconfigArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconfigArgs) ProtoMessage() {}

func (x *ReconfigArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconfigArgs.ProtoReflect.Descriptor instead.
func (*ReconfigArgs) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{14}
}

func (x *ReconfigArgs) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ReconfigArgs) GetDestGid() *GroupId {
	if x != nil {
		return x.DestGid
	}
	return nil
}

type KeyMigrateArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reconfig *Reconfig `protobuf:"bytes,1,opt,name=reconfig,proto3" json:"reconfig,omitempty"`
	Value    *Value    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyMigrateArgs) Reset() {
	*x = KeyMigrateArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyMigrateArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyMigrateArgs) ProtoMessage() {}

func (x *KeyMigrateArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyMigrateArgs.ProtoReflect.Descriptor instead.
func (*KeyMigrateArgs) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{15}
}

func (x *KeyMigrateArgs) GetReconfig() *Reconfig {
	if x != nil {
		return x.Reconfig
	}
	return nil
}

func (x *KeyMigrateArgs) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// A type for arguments across all operations
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation Op `protobuf:"varint,1,opt,name=operation,proto3,enum=pb.Op" json:"operation,omitempty"`
	// Types that are assignable to Arg:
	//	*Command_Get
	//	*Command_Set
	//	*Command_Clear
	//	*Command_Cas
	//	*Command_PeerJoinLeave
	//	*Command_Reconfig
	//	*Command_RetriveReconfig
	//	*Command_KeyMigrate
	Arg isCommand_Arg `protobuf_oneof:"arg"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{16}
}

func (x *Command) GetOperation() Op {
	if x != nil {
		return x.Operation
	}
	return Op_GET
}

func (m *Command) GetArg() isCommand_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (x *Command) GetGet() *Key {
	if x, ok := x.GetArg().(*Command_Get); ok {
		return x.Get
	}
	return nil
}

func (x *Command) GetSet() *KeyValue {
	if x, ok := x.GetArg().(*Command_Set); ok {
		return x.Set
	}
	return nil
}

func (x *Command) GetClear() *Empty {
	if x, ok := x.GetArg().(*Command_Clear); ok {
		return x.Clear
	}
	return nil
}

func (x *Command) GetCas() *CASArg {
	if x, ok := x.GetArg().(*Command_Cas); ok {
		return x.Cas
	}
	return nil
}

func (x *Command) GetPeerJoinLeave() *Peer {
	if x, ok := x.GetArg().(*Command_PeerJoinLeave); ok {
		return x.PeerJoinLeave
	}
	return nil
}

func (x *Command) GetReconfig() *ReconfigArgs {
	if x, ok := x.GetArg().(*Command_Reconfig); ok {
		return x.Reconfig
	}
	return nil
}

func (x *Command) GetRetriveReconfig() *ConfigId {
	if x, ok := x.GetArg().(*Command_RetriveReconfig); ok {
		return x.RetriveReconfig
	}
	return nil
}

func (x *Command) GetKeyMigrate() *KeyMigrateArgs {
	if x, ok := x.GetArg().(*Command_KeyMigrate); ok {
		return x.KeyMigrate
	}
	return nil
}

type isCommand_Arg interface {
	isCommand_Arg()
}

type Command_Get struct {
	Get *Key `protobuf:"bytes,2,opt,name=get,proto3,oneof"`
}

type Command_Set struct {
	Set *KeyValue `protobuf:"bytes,3,opt,name=set,proto3,oneof"`
}

type Command_Clear struct {
	Clear *Empty `protobuf:"bytes,4,opt,name=clear,proto3,oneof"`
}

type Command_Cas struct {
	Cas *CASArg `protobuf:"bytes,5,opt,name=cas,proto3,oneof"`
}

type Command_PeerJoinLeave struct {
	PeerJoinLeave *Peer `protobuf:"bytes,6,opt,name=peerJoinLeave,proto3,oneof"`
}

type Command_Reconfig struct {
	// used for shardmaster
	Reconfig *ReconfigArgs `protobuf:"bytes,7,opt,name=reconfig,proto3,oneof"`
}

type Command_RetriveReconfig struct {
	RetriveReconfig *ConfigId `protobuf:"bytes,8,opt,name=retriveReconfig,proto3,oneof"`
}

type Command_KeyMigrate struct {
	// used for shardkv
	KeyMigrate *KeyMigrateArgs `protobuf:"bytes,9,opt,name=keyMigrate,proto3,oneof"`
}

func (*Command_Get) isCommand_Arg() {}

func (*Command_Set) isCommand_Arg() {}

func (*Command_Clear) isCommand_Arg() {}

func (*Command_Cas) isCommand_Arg() {}

func (*Command_PeerJoinLeave) isCommand_Arg() {}

func (*Command_Reconfig) isCommand_Arg() {}

func (*Command_RetriveReconfig) isCommand_Arg() {}

func (*Command_KeyMigrate) isCommand_Arg() {}

// A log entry
type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term  int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Cmd   *Command `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{17}
}

func (x *Entry) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Entry) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Entry) GetCmd() *Command {
	if x != nil {
		return x.Cmd
	}
	return nil
}

// Input to AppendEntries (as defined in Figure 2)
type AppendEntriesArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term         int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID     string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PrevLogIndex int64    `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm  int64    `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	LeaderCommit int64    `protobuf:"varint,5,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	Entries      []*Entry `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *AppendEntriesArgs) Reset() {
	*x = AppendEntriesArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntriesArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesArgs) ProtoMessage() {}

func (x *AppendEntriesArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesArgs.ProtoReflect.Descriptor instead.
func (*AppendEntriesArgs) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{18}
}

func (x *AppendEntriesArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesArgs) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *AppendEntriesArgs) GetPrevLogIndex() int64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesArgs) GetPrevLogTerm() int64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesArgs) GetLeaderCommit() int64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

func (x *AppendEntriesArgs) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Output from AppendEntries
type AppendEntriesRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term    int64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AppendEntriesRet) Reset() {
	*x = AppendEntriesRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendEntriesRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesRet) ProtoMessage() {}

func (x *AppendEntriesRet) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesRet.ProtoReflect.Descriptor instead.
func (*AppendEntriesRet) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{19}
}

func (x *AppendEntriesRet) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesRet) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Input to RequestVote
type RequestVoteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term         int64  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateID  string `protobuf:"bytes,2,opt,name=candidateID,proto3" json:"candidateID,omitempty"`
	LastLogIndex int64  `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LasLogTerm   int64  `protobuf:"varint,4,opt,name=lasLogTerm,proto3" json:"lasLogTerm,omitempty"`
}

func (x *RequestVoteArgs) Reset() {
	*x = RequestVoteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteArgs) ProtoMessage() {}

func (x *RequestVoteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteArgs.ProtoReflect.Descriptor instead.
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{20}
}

func (x *RequestVoteArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteArgs) GetCandidateID() string {
	if x != nil {
		return x.CandidateID
	}
	return ""
}

func (x *RequestVoteArgs) GetLastLogIndex() int64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteArgs) GetLasLogTerm() int64 {
	if x != nil {
		return x.LasLogTerm
	}
	return 0
}

// Output from RequestVote
type RequestVoteRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term        int64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted bool  `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
}

func (x *RequestVoteRet) Reset() {
	*x = RequestVoteRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteRet) ProtoMessage() {}

func (x *RequestVoteRet) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteRet.ProtoReflect.Descriptor instead.
func (*RequestVoteRet) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{21}
}

func (x *RequestVoteRet) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteRet) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

// Input to InstallSnaption (as defined in Figure 13)
type InstallSnapshotArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term              int64  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID          string `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LastIncludedIndex int64  `protobuf:"varint,3,opt,name=lastIncludedIndex,proto3" json:"lastIncludedIndex,omitempty"`
	LastIncludedTerm  int64  `protobuf:"varint,4,opt,name=lastIncludedTerm,proto3" json:"lastIncludedTerm,omitempty"`
	ServiceData       []byte `protobuf:"bytes,5,opt,name=serviceData,proto3" json:"serviceData,omitempty"`
	RaftData          []byte `protobuf:"bytes,6,opt,name=raftData,proto3" json:"raftData,omitempty"`
}

func (x *InstallSnapshotArgs) Reset() {
	*x = InstallSnapshotArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSnapshotArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotArgs) ProtoMessage() {}

func (x *InstallSnapshotArgs) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotArgs.ProtoReflect.Descriptor instead.
func (*InstallSnapshotArgs) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{22}
}

func (x *InstallSnapshotArgs) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *InstallSnapshotArgs) GetLastIncludedIndex() int64 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLastIncludedTerm() int64 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *InstallSnapshotArgs) GetServiceData() []byte {
	if x != nil {
		return x.ServiceData
	}
	return nil
}

func (x *InstallSnapshotArgs) GetRaftData() []byte {
	if x != nil {
		return x.RaftData
	}
	return nil
}

type InstallSnapshotRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term int64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *InstallSnapshotRet) Reset() {
	*x = InstallSnapshotRet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallSnapshotRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotRet) ProtoMessage() {}

func (x *InstallSnapshotRet) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotRet.ProtoReflect.Descriptor instead.
func (*InstallSnapshotRet) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{23}
}

func (x *InstallSnapshotRet) GetTerm() int64 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_kv_proto protoreflect.FileDescriptor

var file_kv_proto_rawDesc = []byte{
	0x0a, 0x08, 0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x17,
	0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1d, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x19, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x47, 0x0a, 0x06, 0x43, 0x41, 0x53, 0x41, 0x72, 0x67, 0x12, 0x1c, 0x0a, 0x02, 0x6b, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x6b, 0x76, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x1b, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x03,
	0x73, 0x72, 0x63, 0x12, 0x1d, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x03, 0x64,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x86, 0x02,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x02, 0x6b, 0x76, 0x12, 0x1b, 0x0a, 0x01, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x01,
	0x73, 0x12, 0x1f, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x67,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x22, 0x50, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x07, 0x64, 0x65, 0x73, 0x74, 0x47, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x07, 0x64, 0x65, 0x73,
	0x74, 0x47, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x0e, 0x4b, 0x65, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x8a, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74,
	0x12, 0x20, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x65, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x03, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x41, 0x53, 0x41, 0x72, 0x67, 0x48, 0x00,
	0x52, 0x03, 0x63, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x48, 0x00, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x34, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6b, 0x65, 0x79,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x72, 0x67, 0x22, 0x50,
	0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x22, 0xd2, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72,
	0x65, 0x76, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x4c, 0x6f, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x23, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x4c, 0x6f, 0x67, 0x54,
	0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x4c, 0x6f,
	0x67, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x22, 0xdd, 0x01,
	0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x61, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a,
	0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x2a, 0xa4, 0x01, 0x0a, 0x02, 0x4f, 0x70, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x41, 0x53, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x10,
	0x05, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x06, 0x12,
	0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x07,
	0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x10, 0x08,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x4e, 0x44, 0x4b, 0x45, 0x59, 0x10, 0x09, 0x12, 0x0d, 0x0a,
	0x09, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x4b, 0x45, 0x59, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x0b, 0x32, 0xd6,
	0x01, 0x0a, 0x07, 0x4b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x05, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x1f, 0x0a,
	0x03, 0x43, 0x41, 0x53, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x41, 0x53, 0x41, 0x72, 0x67,
	0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x22,
	0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x23, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12,
	0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x32, 0xc6, 0x01, 0x0a, 0x04, 0x52, 0x61, 0x66, 0x74,
	0x12, 0x3e, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x74, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x74, 0x22, 0x00,
	0x32, 0x8a, 0x01, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x29, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x32, 0x82, 0x02,
	0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4b, 0x76, 0x12, 0x1c, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x05, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x03,
	0x43, 0x41, 0x53, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x41, 0x53, 0x41, 0x72, 0x67, 0x1a,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x22, 0x0a,
	0x08, 0x50, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x23, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x72, 0x61, 0x66, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kv_proto_rawDescOnce sync.Once
	file_kv_proto_rawDescData = file_kv_proto_rawDesc
)

func file_kv_proto_rawDescGZIP() []byte {
	file_kv_proto_rawDescOnce.Do(func() {
		file_kv_proto_rawDescData = protoimpl.X.CompressGZIP(file_kv_proto_rawDescData)
	})
	return file_kv_proto_rawDescData
}

var file_kv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_kv_proto_goTypes = []interface{}{
	(Op)(0),                     // 0: pb.Op
	(*Key)(nil),                 // 1: pb.Key
	(*Value)(nil),               // 2: pb.Value
	(*KeyValue)(nil),            // 3: pb.KeyValue
	(*Success)(nil),             // 4: pb.Success
	(*Error)(nil),               // 5: pb.Error
	(*CASArg)(nil),              // 6: pb.CASArg
	(*Empty)(nil),               // 7: pb.Empty
	(*Redirect)(nil),            // 8: pb.Redirect
	(*NotResponsible)(nil),      // 9: pb.NotResponsible
	(*GroupId)(nil),             // 10: pb.GroupId
	(*ConfigId)(nil),            // 11: pb.ConfigId
	(*Reconfig)(nil),            // 12: pb.Reconfig
	(*Result)(nil),              // 13: pb.Result
	(*Peer)(nil),                // 14: pb.Peer
	(*ReconfigArgs)(nil),        // 15: pb.ReconfigArgs
	(*KeyMigrateArgs)(nil),      // 16: pb.KeyMigrateArgs
	(*Command)(nil),             // 17: pb.Command
	(*Entry)(nil),               // 18: pb.Entry
	(*AppendEntriesArgs)(nil),   // 19: pb.AppendEntriesArgs
	(*AppendEntriesRet)(nil),    // 20: pb.AppendEntriesRet
	(*RequestVoteArgs)(nil),     // 21: pb.RequestVoteArgs
	(*RequestVoteRet)(nil),      // 22: pb.RequestVoteRet
	(*InstallSnapshotArgs)(nil), // 23: pb.InstallSnapshotArgs
	(*InstallSnapshotRet)(nil),  // 24: pb.InstallSnapshotRet
}
var file_kv_proto_depIdxs = []int32{
	3,  // 0: pb.CASArg.kv:type_name -> pb.KeyValue
	2,  // 1: pb.CASArg.value:type_name -> pb.Value
	11, // 2: pb.Reconfig.configId:type_name -> pb.ConfigId
	10, // 3: pb.Reconfig.src:type_name -> pb.GroupId
	10, // 4: pb.Reconfig.dst:type_name -> pb.GroupId
	1,  // 5: pb.Reconfig.key:type_name -> pb.Key
	8,  // 6: pb.Result.redirect:type_name -> pb.Redirect
	3,  // 7: pb.Result.kv:type_name -> pb.KeyValue
	4,  // 8: pb.Result.s:type_name -> pb.Success
	10, // 9: pb.Result.gid:type_name -> pb.GroupId
	12, // 10: pb.Result.reconfig:type_name -> pb.Reconfig
	9,  // 11: pb.Result.notResponsible:type_name -> pb.NotResponsible
	1,  // 12: pb.ReconfigArgs.key:type_name -> pb.Key
	10, // 13: pb.ReconfigArgs.destGid:type_name -> pb.GroupId
	12, // 14: pb.KeyMigrateArgs.reconfig:type_name -> pb.Reconfig
	2,  // 15: pb.KeyMigrateArgs.value:type_name -> pb.Value
	0,  // 16: pb.Command.operation:type_name -> pb.Op
	1,  // 17: pb.Command.get:type_name -> pb.Key
	3,  // 18: pb.Command.set:type_name -> pb.KeyValue
	7,  // 19: pb.Command.clear:type_name -> pb.Empty
	6,  // 20: pb.Command.cas:type_name -> pb.CASArg
	14, // 21: pb.Command.peerJoinLeave:type_name -> pb.Peer
	15, // 22: pb.Command.reconfig:type_name -> pb.ReconfigArgs
	11, // 23: pb.Command.retriveReconfig:type_name -> pb.ConfigId
	16, // 24: pb.Command.keyMigrate:type_name -> pb.KeyMigrateArgs
	17, // 25: pb.Entry.cmd:type_name -> pb.Command
	18, // 26: pb.AppendEntriesArgs.entries:type_name -> pb.Entry
	1,  // 27: pb.KvStore.Get:input_type -> pb.Key
	3,  // 28: pb.KvStore.Set:input_type -> pb.KeyValue
	7,  // 29: pb.KvStore.Clear:input_type -> pb.Empty
	6,  // 30: pb.KvStore.CAS:input_type -> pb.CASArg
	14, // 31: pb.KvStore.PeerJoin:input_type -> pb.Peer
	14, // 32: pb.KvStore.PeerLeave:input_type -> pb.Peer
	19, // 33: pb.Raft.AppendEntries:input_type -> pb.AppendEntriesArgs
	21, // 34: pb.Raft.RequestVote:input_type -> pb.RequestVoteArgs
	23, // 35: pb.Raft.InstallSnapshot:input_type -> pb.InstallSnapshotArgs
	1,  // 36: pb.ShardMaster.GetKeyGroup:input_type -> pb.Key
	15, // 37: pb.ShardMaster.Reconfig:input_type -> pb.ReconfigArgs
	11, // 38: pb.ShardMaster.GetReconfig:input_type -> pb.ConfigId
	1,  // 39: pb.ShardKv.Get:input_type -> pb.Key
	3,  // 40: pb.ShardKv.Set:input_type -> pb.KeyValue
	7,  // 41: pb.ShardKv.Clear:input_type -> pb.Empty
	6,  // 42: pb.ShardKv.CAS:input_type -> pb.CASArg
	14, // 43: pb.ShardKv.PeerJoin:input_type -> pb.Peer
	14, // 44: pb.ShardKv.PeerLeave:input_type -> pb.Peer
	12, // 45: pb.ShardKv.KeyMigration:input_type -> pb.Reconfig
	13, // 46: pb.KvStore.Get:output_type -> pb.Result
	13, // 47: pb.KvStore.Set:output_type -> pb.Result
	13, // 48: pb.KvStore.Clear:output_type -> pb.Result
	13, // 49: pb.KvStore.CAS:output_type -> pb.Result
	13, // 50: pb.KvStore.PeerJoin:output_type -> pb.Result
	13, // 51: pb.KvStore.PeerLeave:output_type -> pb.Result
	20, // 52: pb.Raft.AppendEntries:output_type -> pb.AppendEntriesRet
	22, // 53: pb.Raft.RequestVote:output_type -> pb.RequestVoteRet
	24, // 54: pb.Raft.InstallSnapshot:output_type -> pb.InstallSnapshotRet
	13, // 55: pb.ShardMaster.GetKeyGroup:output_type -> pb.Result
	13, // 56: pb.ShardMaster.Reconfig:output_type -> pb.Result
	13, // 57: pb.ShardMaster.GetReconfig:output_type -> pb.Result
	13, // 58: pb.ShardKv.Get:output_type -> pb.Result
	13, // 59: pb.ShardKv.Set:output_type -> pb.Result
	13, // 60: pb.ShardKv.Clear:output_type -> pb.Result
	13, // 61: pb.ShardKv.CAS:output_type -> pb.Result
	13, // 62: pb.ShardKv.PeerJoin:output_type -> pb.Result
	13, // 63: pb.ShardKv.PeerLeave:output_type -> pb.Result
	13, // 64: pb.ShardKv.KeyMigration:output_type -> pb.Result
	46, // [46:65] is the sub-list for method output_type
	27, // [27:46] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_kv_proto_init() }
func file_kv_proto_init() {
	if File_kv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotResponsible); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reconfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconfigArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyMigrateArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntriesArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendEntriesRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSnapshotArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallSnapshotRet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kv_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Result_Redirect)(nil),
		(*Result_Kv)(nil),
		(*Result_S)(nil),
		(*Result_Gid)(nil),
		(*Result_Reconfig)(nil),
		(*Result_NotResponsible)(nil),
	}
	file_kv_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*Command_Get)(nil),
		(*Command_Set)(nil),
		(*Command_Clear)(nil),
		(*Command_Cas)(nil),
		(*Command_PeerJoinLeave)(nil),
		(*Command_Reconfig)(nil),
		(*Command_RetriveReconfig)(nil),
		(*Command_KeyMigrate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kv_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_kv_proto_goTypes,
		DependencyIndexes: file_kv_proto_depIdxs,
		EnumInfos:         file_kv_proto_enumTypes,
		MessageInfos:      file_kv_proto_msgTypes,
	}.Build()
	File_kv_proto = out.File
	file_kv_proto_rawDesc = nil
	file_kv_proto_goTypes = nil
	file_kv_proto_depIdxs = nil
}
